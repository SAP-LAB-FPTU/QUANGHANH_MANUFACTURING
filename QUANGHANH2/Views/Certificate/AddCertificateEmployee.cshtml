@model QUANGHANH2.Models.ChungChi_NhanVien_Model

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddCertificateEmployee</title>
</head>
<body>
    @using (Html.BeginForm("AddCertificateEmployee", "Certificate", FormMethod.Post, new { onSubmit = "return SubmitForm(this)" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="row">
                <div class="form-group col s6 m6 l6">
                    @Html.LabelFor(model => model.MaNV, "Mã nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.MaNV, new { htmlAttributes = new { @class = "form-control", @list = "list", @id = "manv_add" } })
                        <datalist id="list">
                            @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.List_nhanvien)
                            {
                                <option id="@item.Value" value="@item.Text">@item.Text</option>
                            }
                        </datalist>
                        @Html.ValidationMessageFor(model => model.MaNV, "", new { @class = "text-danger" })
                        <p hidden style="color:red" id="message_checkNameExist">Mã nhân viên không tồn tại. Hãy nhập lại</p>
                    </div>
                </div>

                <div class="form-group col s6 m6 l6">
                    @Html.LabelFor(model => model.MaNV, "Tên nhân viên", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <input type="text" class="form-control " id="nameEmp_add" disabled />
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col s12 m12 l12">
                    @Html.LabelFor(model => model.SoHieu, "Số Hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SoHieu, new { htmlAttributes = new { @class = "form-control", @id = "sohieu" } })
                        @Html.ValidationMessageFor(model => model.SoHieu, "", new { @class = "text-danger" })
                        <p hidden style="color:red" id="message">Số hiệu đã tồn tại. Hãy nhập lại</p>
                    </div>
                </div>

                <div class="form-group col s12 m12 l12">
                    @Html.LabelFor(model => model.NgayCap, "Ngày Cấp", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="start_time" class="form-control" />
                        @Html.EditorFor(model => model.NgayCap, new { htmlAttributes = new { @style = "display: none !important", @class = "form-control", @id = "ngaycap_add_cert" } })
                        @Html.ValidationMessageFor(model => model.NgayCap, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col s12 m12 l12">
                    @Html.LabelFor(model => model.MaChungChi, "Tên Chứng chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("MaChungChi", (IEnumerable<SelectListItem>)ViewBag.List_chungchi, "Chọn chứng chỉ", htmlAttributes: new { @class = "form-control", @id = "machungchi"})
                        @Html.ValidationMessageFor(model => model.MaChungChi, "", new { @class = "text-danger" })
                        <p hidden style="color:red" id="message_cirt_emp">Chứng chỉ của nhân viên này đã tồn tại. Hãy chọn lại</p>
                    </div>
                </div>
                <hr />
                <div class="form-group col s12 m12 l12">
                    <div class="control-label col-md-2"></div>
                    <br />
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Thêm" class=" waves-light btn blue darken-2 white-text " id="submit_form" />
                    </div>
                </div>
            </div>

        </div>
    }
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>
    }
</body>

</html>
<script>
    $(document).ready(function () {

        $("#start_time").datepicker({ dateFormat: 'dd/mm/yyyy', changeYear: true });
        $("#start_time").keydown(function (e) {
            e.preventDefault();
        });

    });
    $('#sohieu').blur(function () {
        $.ajax({
            url:'@Url.Action("validateID", "Certificate")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                    $('#message').show();
                    $('#submit_form').attr("disabled", true);
                } else {
                    $('#message').hide();
                $('#submit_form').attr("disabled", false);
                }
            },
            error: (response) => {

            },
        })
    });

    $('#manv_add').change(function () {
        var manv = $(this).val();       
      $.ajax({
            url:'@Url.Action("getNameEmployee", "Certificate")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                    $('#nameEmp_add').val(response.data);
                    $('#message_checkNameExist').hide();
                    $('#submit_form').attr("disabled", false);
                } else {
                    $('#nameEmp_add').val(response.data);
                    $('#message_checkNameExist').show();
                    $('#submit_form').attr("disabled", true);
                }
            },
            error: (response) => {

            },
        })

    });
    $('#manv_add').blur(function () {
        var manv = $(this).val();
        var first_cir = "";
        $('#machungchi').blur(function () {           
            $.ajax({
            url:'@Url.Action("validateExistCirtificateOfEmp", "Certificate")',
            type: "POST",
                data: {
                    id: $(this).val(),
                    manv: manv,
                    first_cir: first_cir,
                },
            success: (response) => {
                if (response.success) {
                    $('#message_cirt_emp').show();
                    $('#submit_form').attr("disabled", true);
                } else {
                    $('#message_cirt_emp').hide();
                    $('#submit_form').attr("disabled", false);
                }
            },
            error: (response) => {

            },
        })
        })
    })
    //$("#start_time_add_certificate_Emp").on("change", function () {
    //    var fromdate = $(this).val();
    //    alert(fromdate);
    //});
    $('#submit_form').click(function () {

        var ngaycap = $('#start_time').val();
        var arr  = ngaycap.split('/');
        $('#ngaycap_add_cert').val(arr[1] + "/" + arr[0] + "/" + arr[2]);

    })

</script>


