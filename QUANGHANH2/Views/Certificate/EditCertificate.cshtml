@model QUANGHANH2.Models.ChungChi
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditCertificate</title>
</head>
<body>
    <div id="edit-modal-body">
        @using (Html.BeginForm("EditCertificate", "Certificate", FormMethod.Post, new { onSubmit = "return SubmitForm(this) " }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MaChungChi)
                <div class="form-group">
                    @Html.LabelFor(model => model.TenChungChi, "Tên chứng chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TenChungChi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TenChungChi, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("", "Chọn thời hạn", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("han", (IEnumerable<SelectListItem>)ViewBag.listOption, htmlAttributes: new { @class = "form-control", @id = "option_cert_edit" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ThoiHan, "Thời hạn", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="edit_cert" class="form-control" />
                        @Html.EditorFor(model => model.ThoiHan, new { htmlAttributes = new { @style = "display: none !important", @class = "form-control editform", @id = "editform" } })
                        @Html.ValidationMessageFor(model => model.ThoiHan, "", new { @class = "text-danger" })
                        <p hidden style="color:red" id="message_isNum_edit">Thời hạn là một số dương. Vui lòng nhập lại</p>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.KieuChungChi, "Kiểu chứng chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.KieuChungChi, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownList("KieuChungChi", (IEnumerable<SelectListItem>)ViewBag.listTypeCert, "Chọn kiểu chứng chỉ", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.KieuChungChi, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="save" type="submit" value="Lưu" class="waves-light btn blue darken-2 white-text " />
                    </div>
                </div>
            </div>
        }
    </div>
</body>
</html>
@Scripts.Render("~/bundles/jqueryval")
<script>

    $(document).ready(function () {
        var show = $('#editform').val();
        
        if (show == -1) {
            $('#edit_cert').val("Vĩnh viễn");
            $('#edit_cert').attr("disabled", "disabled");
        }
        else {
            $('#option_cert_edit').val(2);
            $("#edit_cert").val($("#editform").val())

            $('#edit_cert').blur(function () {
                var isNum = $(this).val();
                if (!isNumeric(isNum) || (new Number(isNum) < 0)) {
                    //Check if Thoihan is numeric
                    $("#message_isNum_edit").show(); //Show error
                    $('#save').attr("disabled", true);

                }
                else {
                    $("#message_isNum_edit").hide();
                    $('#save').attr("disabled", false);
                }
            })
        }
        $('#option_cert_edit').change(function () {
            var option = $(this).val();

            if (option == 1) {
                //show
                $('#edit_cert').val("Vĩnh viễn");
                $('#edit_cert').attr("disabled", "disabled");
                $("#editform").val(-1);
            } else {
                //show
                $('#edit_cert').removeAttr("disabled", "disabled");
                $('#edit_cert').val("");

                $('#edit_cert').blur(function () {
                    var isNum = $(this).val();
                    if (!isNumeric(isNum) || (new Number(isNum) < 0)) {
                        //Check if Thoihan is numeric
                        $("#message_isNum_edit").show(); //Show error
                        $('#save').attr("disabled", true);

                    }
                    else {
                        $("#message_isNum_edit").hide();
                        $('#save').attr("disabled", false);
                    }
                })
            }
        })
        $("#save").click(function () {
            var edit_end = $("#edit_cert").val();
            if (edit_end == "Vĩnh viễn") {
                $("#editform").val(-1);
            }
            else {
                $("#editform").val(edit_end);
            }
            
        })

    })
    function isNumeric(value) {
        return /^-{0,1}\d+$/.test(value);
    }
</script>
