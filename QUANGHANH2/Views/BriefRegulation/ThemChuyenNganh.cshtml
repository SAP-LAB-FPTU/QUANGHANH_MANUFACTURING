@model QUANGHANH2.Models.ChuyenNganh

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ThemChuyenNganh</title>
</head>
<body>

    @using (Html.BeginForm("ThemChuyenNganh", "BriefRegulation", FormMethod.Post, new { onSubmit = "return SubmitForm(this)" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MaChuyenNganh, "Mã Chuyên Ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaChuyenNganh, new { htmlAttributes = new { @class = "form-control", @id = "validate_cn" } })
                    @Html.ValidationMessageFor(model => model.MaChuyenNganh, "", new { @class = "text-danger" })
                    <p hidden style="color:red" id="message">Mã chuyên ngành đã tồn tại. Hãy nhập lại</p>
                    <p hidden style="color:red" id="messageNull">Không được để trống ô này</p>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TenChuyenNganh, "Tên Chuyên Ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TenChuyenNganh, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TenChuyenNganh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col s6 m6 l6">
                <div class="col-md-6">
                    <label>
                        <input id="rd-cb" class="with-gap" name="cc" type="radio" checked />
                        <span>Cấp bậc</span>
                    </label>
                    <label>
                        <input id="rd-cbk" class="with-gap" name="cc" type="radio" />
                        <span>Cấp bậc khác</span>
                    </label>
                    @Html.DropDownList("CapBac", (IEnumerable<SelectListItem>)ViewBag.List_CapBac, "Chọn Cấp Bậc", htmlAttributes: new { @class = "form-control", @id = "drp-cap-bac" })
                    @Html.ValidationMessageFor(model => model.CapBac, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.CapBac, new { htmlAttributes = new { @class = "form-control",@id="in-cap-bac-khac", @disabled = "disabled" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ChiTiet, "Chi Tiết ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ChiTiet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ChiTiet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col s6 m6 l6">
                @Html.LabelFor(model => model.MaNganh, "Mã Ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.MaNganh, new { htmlAttributes = new { @class = "form-control", @list = "list", @id = "manganh_add" } })
                    <datalist id="list">
                        @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.List_nganh)
                        {
                            <option id="@item.Value" value="@item.Text">@item.Text</option>
                        }
                    </datalist>
                    @Html.ValidationMessageFor(model => model.MaNganh, "", new { @class = "text-danger" })
                    <p hidden style="color:red" id="messageNganh">Mã ngành không tồn tại</p>
                </div>
            </div>

            <div class="form-group col s6 m6 l6">
                @Html.LabelFor(model => model.MaNganh, "Tên Ngành", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <input type="text" class="form-control " id="tennganh_add" disabled />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Tạo" class="btn btn-default" id="btn_save_doc" disabled />
                </div>
            </div>
        </div>
    }
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>
    }
</body>
</html>
<script>
    $(document).ready(function () {
        $('input:radio[name=cc]').on("click", () => {
            if ($('#rd-cb').is(':checked')) {
                $("#in-cap-bac-khac").prop("disabled", true);
                $("#drp-cap-bac").prop("disabled", false);
                //drp - cap - bac
            }
            if ($('#rd-cbk').is(':checked')) {
                $("#in-cap-bac-khac").prop("disabled", false);
                $("#drp-cap-bac").prop("disabled", true);
            }
        })
    })

    $('#manganh_add').change(function () {
        var manganh = $(this).val();
       // alert(manganh);
    $.ajax({
        url:'@Url.Action("getTenNganh", "BriefRegulation")',
        type: "POST",
        data: { id: $(this).val() },
        success: (response) => {
            if (response.success) {
            $('#tennganh_add').val(response.data);
            } else {

            }
        },
        error: (response) => {

        },
      })

    });
    var checkMCN = false;
    var checkMN = false;
     $('#validate_cn').blur(function () {
        $.ajax({
            url:'@Url.Action("validateIDCN", "BriefRegulation")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                    $('#message').show();
                    $('#messageNull').hide();
                    checkMCN = true;
                    $('#btn_save_doc').attr("disabled", true);
                } else {
                    $('#TenNV').val(response.responseText);
                    $('#message').hide();
                    checkMCN = false;
                    if ($('#validate_cn').val() == '') {
                        $('#messageNull').show();
                    } else {
                        $('#messageNull').hide();
                        $('#btn_save_doc').attr("disabled", false);
                    }

                }
            },
            error: (response) => {

            },
        })
     })
     $('#manganh_add').blur(function () {
        $.ajax({
            url:'@Url.Action("validateIDN", "BriefRegulation")',
            type: "POST",
            data: { id: $(this).val() },
            success: (response) => {
                if (response.success) {
                   checkMN = false;
                    $('#messageNganh').show();
                } else {
                    console.log($('#manganh_add').val());
                    $('#messageNganh').hide();
                    checkMN = true;
                }
            },
            error: (response) => {
            },
        })
     })



    //$(document).ready{
    //    if ($("#validate_cn").val() == null) {
    //        $('#btn_save_doc').attr("disabled", true);
    //        alert('ok');
    //    }
    //}
</script>
